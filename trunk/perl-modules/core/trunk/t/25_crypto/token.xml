<token_config>
    <token id="default">
        <backend>OpenXPKI::Crypto::Backend::OpenSSL</backend>
        <!--
            if the token support sessions then you can use session and daemon too

            session - token will be logged out at end of session
            daemon  - token will be only logged out explicitly
        -->
        <mode>standby</mode>

        <!-- possible values are OpenSSL, nCipher, LunaCA -->
	<engine>OpenSSL</engine>
	<engine_section></engine_section>
        <key_store>OPENXPKI</key_store>
        <engine_usage></engine_usage>

	<!-- OpenSSL binary location -->
        <!-- <shell>/usr/local/ssl/bin/openssl</shell> -->
        <!-- <shell>/usr/bin/openssl</shell> -->
        <shell>/opt/local/bin/openssl</shell>

	<!-- OpenSSL binary call gets wrapped with this command -->
        <wrapper></wrapper>

	<!-- random file to use for OpenSSL        -->
        <!-- <randfile>t/25_crypto/rand</randfile> -->
        <randfile>t/25_crypto/rand</randfile>

    </token>



    <token id="ca1" super="common/token_config/token{default}">
        <!-- CA key (PEM encoded) -->
        <key>t/25_crypto/ca1/cakey.pem</key>

	<!-- CA certificate, must be in PEM format -->
        <cert>t/25_crypto/ca1/cacert.pem</cert>

	<!-- CA certificate chain for crypto operations -->
	<internal_chain>t/25_crypto/ca1/cacert.pem</internal_chain>

	<!-- Number of CA passphrase fragments -->
        <passwd_parts>1</passwd_parts>

	<!-- CA passphrase -->
        <passwd>1234567890</passwd>
    </token>

    <token id="ca2" super="common/token_config/token{ca1}">
        <!-- CA key (PEM encoded) -->
        <key>t/25_crypto/ca2/cakey.pem</key>

	<!-- CA certificate, must be in PEM format -->
        <cert>t/25_crypto/ca2/cacert.pem</cert>

	<!-- CA certificate chain for crypto operations -->
	<internal_chain>t/25_crypto/ca2/cacert.pem</internal_chain>

	<!-- Number of CA passphrase fragments -->
        <passwd_parts>1</passwd_parts>

	<!-- CA passphrase -->
        <passwd>1234567890</passwd>
    </token>

</token_config>
