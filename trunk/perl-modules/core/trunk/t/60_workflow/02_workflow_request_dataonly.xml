<workflow>
  <type>data only certificate request</type>
  <description>Create a PKCS#10 request from user submitted request data</description>
  <persister>OpenXPKI</persister>

  <state name="INITIAL">
    <description>Initial state for basic certificate requests</description>
    <action name="request.certificate.dataonly.create"
	    resulting_state="GET_TOKEN" />
  </state>

  <state name="GET_TOKEN" autorun="yes">
    <description>Obtain crypto token</description>
    <action name="token.get"
	    resulting_state="GENERATE_PASSPHRASE"/>
  </state>

  <state name="GENERATE_PASSPHRASE">
    <description>Create pass phrase</description>
    <!-- This is just a test to verify if branching in workflow definition
	 works as expected. In this particular case, the passphrase generation
	 activity does not overwrite an existing passphrase that is already
	 in the context, so the activity could be called anyway in this case.
      -->
    <action name="passphrase.generate"
	    resulting_state="GENERATE_KEY">
      <!-- a bareword Perl expression is possible here but not user friendly,
	   in real life this would probably be a condition class name that
	   performs the verification instead 
	-->
      <condition test="! defined $context->{passphrase}"/>
    </action>
    <action name="null"
	    resulting_state="GENERATE_KEY">
      <condition test="defined $context->{passphrase}"/>
    </action>
  </state>

  <state name="GENERATE_KEY">
    <description>Create key pair</description>
    <action name="key.generate"
	    resulting_state="CREATE_REQUEST"/>
  </state>
				   
  <state name="CREATE_REQUEST">
    <description>Create certificate request</description>
    <action name="request.certificate.pkcs10.create"
	    resulting_state="FINISHED"/>
  </state>

  <state name="FINISHED" />
</workflow>
