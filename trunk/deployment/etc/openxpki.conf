#
# OpenXPKI Meta Configuration File
#
# Written by Martin Bartosch for the OpenXPKI project 2006
# Copyright (c) 2006 by The OpenXPKI Project
# $Revision: 80 $
#
#
#
# This meta configuration file is used to produce a valid OpenXPKI
# configuration file set.
#
# Section names are specified in square brackets, e. g. [foo] and may
# be opened/continued more than once:
# [foo]
# bar: 123
# [baz]
# xyz: 456
# [foo]
# continued: 789
#
# Multi-values can be specified by repeating the key:
# [foo]
# multi: abc
# multi: def
# multi: ghi
#
# It is possible to reference any other variable defined in the configuration
# file using $(section.key), e. g.
# [baz]
# uvw: $(foo.bar)
# 
# These references may be nested and may also be used within reference names
# themselves:
#
# [foo]
# id: bar
# indirect: $(foo.$(id))
# 
# This is identical to referencing $(foo.bar) which in turn is 123 (see above). 
#
# It is possible to attach multiple values or entire sections in order
# to form hierarchical structures:
# [blurb]
# root: $(foo)
# 
#
#
###########################################################################
# Global configuration settings and directory specifications
[global]
name: OpenXPKI

[deployment]

# Configuration style for generated XML configuration files, REQUIRED.
# Allowed values: 
# all-in-one - generates one single XML configuration file
# multi-file - generates several XML files that are referenced via XInclude
xmlstyle: all-in-one
#xmlstyle: multi-file


[dir]
# common prefix
prefix:           /usr/local

# machine-specific files (libraries etc)
exec_prefix:      $(dir.prefix)

# executable user programs
bindir:           $(dir.exec_prefix)/bin

# auxiliary programs (not intended to be run by users)
# libexecdir:       $(dir.exec_prefix)/lib/openxpki

# read-only architecture independent data files
datarootdir:      $(dir.prefix)/share
datadir:          $(dir.datarootdir)/openxpki

# read-only configuration files
sysconfdir:       $(dir.prefix)/etc/openxpki
cadir:            $(dir.sysconfdir)/ca

# data files modified by the application
localstatedir:    $(dir.prefix)/var
openxpkistatedir: $(dir.localstatedir)/openxpki

# locales
localedir:        $(dir.datarootdir)/locale

# temp files
tmpdir:           $(dir.localstatedir)/tmp

# 
perllib:

###########################################################################
# Common files
[file]
# OpenSSL binary loation, REQUIRED
openssl: /usr/bin/openssl


###########################################################################
# OpenXPKI Server configuration
[server]
# server process environment, REQUIRED

# low-privilege runtime user (server process runs as this user)
runuser:         openxpki
rungroup:        openxpki

# administrative user, used for file ownership
admuser:         root
admgroup:        root

# configuration files
config:          $(dir.sysconfdir)/openxpki.xml
logconfig:       $(dir.sysconfdir)/log.conf

# data files
pidfile:         $(dir.localstatedir)/run/openxpki.pid
socketfile:      $(dir.openxpkistatedir)/openxpki.socket
stderrfile:      $(dir.openxpkistatedir)/stderr.log

# client communication
transport:       Simple
serialization:   Simple
service:         Test

###########################################################################
# System log configuration
[log_file]
file:            $(dir.openxpkistatedir)/openxpki.log

[log_syslog]
facility:        local7


###########################################################################
# Internationalization
[i18n]
# Language specific settings, REQUIRED
localedir:       $(dir.localedir)
defaultlanguage: C


###########################################################################
# Database configuration
[database]
# REQUIRED
server_id:    0
server_shift: 8

# Specify database backend to use, REQUIRED
# Allowed values: SQLite, DB2, Oracle, mysql, Pg
type:         SQLite

# Database name (DB-specific, see perldoc DBD::<type>)
name:         $(dir.openxpkistatedir)/sqlite.db

# Define these settings as needed. Undefined keys will not show up in the
# output configuration. Defined but empty settings will result in an 
# empty XML tag.
#host:         localhost
#port:     
#user:
#passwd:
#namespace:

# You can usually leave this untouched, it will automatically reference
# the correct options section based on the database type you selected.
options:      $(DB-$(database.type)-Options)

# database vendor specific options
[DB-SQLite-Options]

[DB-DB2-Options]
CLASSPATH:    /home/db2inst1/sqllib/java/sqlj.zip:/home/db2inst1/sqllib/function:/home/db2inst1/sqllib/java/db2java.zip:/home/db2inst1/sqllib/java/runtime.zip
DB2INSTANCE:  db2inst1
DB2DIR:       /usr/IBMdb2/V7.1
INSTHOME:     /home/db2inst1

[DB-Oracle-Options]
ORACLE_HOME:  /opt/oracle/OraHome
ORACLE_SID:   OPENXPKI01

[DB-mysql-Options]

[DB-Pg-Options]


###########################################################################
# PKI configuration

# this continues the global section
[global]
debug:    0

# PKI Realm identifiers (sections in this configuration file)
pkirealm: Realm 1
#pkirealm: Realm 2


###########################################################################
# Realm definitions
[Realm 1]
name: OpenXPKI Test CA
issuingca: TEST_DUMMY_CA_1
issuingca: TEST_DUMMY_CA_2
profiles:  $(profiles)

[Realm 2]
name: Test User CA
issuingca: TEST_USER_CA_1
issuingca: TEST_USER_CA_2
profiles:  $(profiles)

###########################################################################
# Issuing CAs

# for Realm 1 (OpenXPKI Test CA)
[TEST_DUMMY_CA_1]
# internal CA ID
id:  testdummyca1
dir: $(dir.cadir)/testca1

[TEST_DUMMY_CA_2]
# internal CA ID
id:  testdummyca2
dir: $(dir.cadir)/testca2


###########################################################################
# Profiles

[baseprofile]


[endentityprofile]
foo: bar
baz: 1234

[profiles]
#crl:          $(crlprofile)
endentity:    $(endentityprofile)
#selfsignedca: $(selfsignedcaprofile)


