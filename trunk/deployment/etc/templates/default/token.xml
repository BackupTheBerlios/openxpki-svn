<token_config>
    <token id="default">
        <backend>OpenXPKI::Crypto::Backend::OpenSSL</backend>
        <!--
            if the token support sessions then you can use session and daemon too

            session - token will be logged out at end of session
            daemon  - token will be only logged out explicitly
        -->
        <mode>standby</mode>

        <!-- possible values are OpenSSL, nCipher, LunaCA -->
	<engine>OpenSSL</engine>
        <engine_section></engine_section>
        <key_store>OPENXPKI</key_store>
        <engine_usage></engine_usage>

	<!-- OpenSSL binary location -->
        <shell>[% file.openssl %]</shell>

	<!-- OpenSSL binary call gets wrapped with this command -->
        <wrapper></wrapper>

	<!-- random file to use for OpenSSL        -->
        <!-- <randfile>t/25_crypto/rand</randfile> -->
        <randfile>[% dir.openxpkistatedir %]/rand</randfile>

	<!-- debugging: 0 (off), 1 (on) -->
	<debug>0</debug>
    </token>

[% FOREACH realmsection = global.pkirealm %]

    [% FOREACH ca = $realmsection.issuingca %]
    
    [% THROW config "No 'id' defined for issuing CA $ca" IF ! $ca.id.defined %]
    [% THROW config "No 'dir' defined for issuing CA $ca" IF ! $ca.dir.defined %]

    <token id="[% $ca.id %]" super="../token{default}">
        <!-- CA key (PEM encoded) -->
        <key>[% $ca.dir %]/cakey.pem</key>

	<!-- CA certificate, must be in PEM format -->
        <cert>[% $ca.dir %]/cacert.pem</cert>

	<!-- CA certificate chain for crypto operations -->
	<internal_chain>[% $ca.dir %]/cachain.pem</internal_chain>

	<!-- Number of CA passphrase fragments -->
        <passwd_parts>1</passwd_parts>

	<!-- CA passphrase -->
        <passwd>1234567890</passwd>
    </token>
    [% END %]
[% END %]

</token_config>
